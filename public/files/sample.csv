BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1890348
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1890348/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1890348/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201757017005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1890357
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1890357/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1890357/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200935673008
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>encrypted password is null create new one with UUID
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
USERSERVICE>>>>fetched user is null
HISTORY-INITIALIZER>>>>user != null ?:  false
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
USERSERVICE>>>>fetched user is null
HISTORY-INITIALIZER>>>>user != null ?:  false
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
USERSERVICE>>>>fetched user is null
HISTORY-INITIALIZER>>>>user != null ?:  false
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1891296
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1891296/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1891296/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1849271
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201887909004/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201887909004/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201887909004/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1847931
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1847931
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1549579
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/version/android_2.0.1/notifications
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/preferences
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1915600
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1915600
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1915600/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1916898
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1916898/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1916898/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/users
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/rules
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/users
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/rules
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/users
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/rules
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/users
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/rules
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/users
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/rules
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/users
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/rules
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/users
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/users
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/rules
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201844407002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1916314
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/preferences
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1721580
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202829144002
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1942546
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1942546/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1942546/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/1949949
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/1949949/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/1949949/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0301073804007/requests/1953138
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0301073804007/requests/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/version/android_2.0.1/notifications
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928/sign
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1916898
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1959928/archive
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1961929
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1961929
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1938195
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201717428004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1963878
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1964031
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1964031
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1964031
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1963878
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1964031
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1963878
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1963878
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201808040004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1973329
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1973329/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1973329/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1938195
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1985236
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/520590044481603459778001
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201808040004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1988937
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1988937/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1988937/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/790560081280002455803001
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1988383
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1989759
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1988383
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1988383/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1993362
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1993362/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1993362/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1989759
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1999693
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1999693
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200997749006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1999693
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2000574
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2000574
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2000574
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2000574
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2000574
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2000574
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2000757
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1938195
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2000757
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2000757
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2000757/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202285655004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202285655004
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202285655004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202885655004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202885655004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2004118
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2004118/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2004118/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202829144002
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202829144002
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1891083
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2004672
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2004672/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2004672/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2010816
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2004672
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141083197328
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141083197328
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2011579
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2011579/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2011579/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2016930
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2016930/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2016930/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1891083
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1891083
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1891083
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2027559
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2027559/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2027559/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/preferences
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2028876
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2028876
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2028876/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2028876/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2030343
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2030343/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2030343/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2031033
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2031033/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2031033/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2031033/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2031033/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2031072
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2031072/sign
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2031072/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2031594
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2031594/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2031594/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/1956900
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2041962
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2041962/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2041962/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2041962/unsign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2041962
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1938195
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2049688
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2049688/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201282969005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2059587
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2059587/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2059587/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201282969005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2059602
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2059602/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2059602/pay
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
USERSERVICE>>>>fetched user is null
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/80002278296000
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36/sign
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36/pay
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/38
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/38
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/statement
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/statement
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/statement
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36/histories
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
USERSERVICE>>>>fetched user is null
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/name
HTTP CLIENT>>>>execute request : /api/v1/0015703150/name
HTTP CLIENT>>>>execute request : /api/v1/0015703150/avatar
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/36
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/name
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/password
HTTP CLIENT>>>>execute request : /api/v1/0015703150/name
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/name
HTTP CLIENT>>>>execute request : /api/v1/0015703150/name
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests/41
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests/41
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests/45
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/version/android_0.0.1/notifications
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests/45
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000584055600/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2062341
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2062341
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2062341
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2062341
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2062341
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2062341/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201070797001
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2072997
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2072997
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2072997
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200935673008
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200935673008
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200935673008
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200935673008
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2074317
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2074317/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2074317/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2072997
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2072997
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2075829
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2075829/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2075829/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201808040004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2075832
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2075832/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1938195
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201808040004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2088669
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2088669
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2088669/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2088669/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2082931
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2082931/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089650
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
USERSERVICE>>>>fetched user is null
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/51/sign
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/51/pay
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/51
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
USERSERVICE>>>>fetched user is null
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests/39/histories
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/30100538075603/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
USERSERVICE>>>>fetched user is null
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/52/sign
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests/52/pay
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/47000507946607/requests
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201757017005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2097771
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2097771/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2097771/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2097771/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2098074
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2098074/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2098074/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089380
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089518
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2100142
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089518
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089518
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089518
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089518
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089518
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089380
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089380
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089380
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202885655004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107311
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107311/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107311/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2088663
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201717428004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107353
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107353
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107353/sign
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107353
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107353/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2088663
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201808040004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201757017005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2088663
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2088663/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2088663/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201757017005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2109310
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2109310/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2109310/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201757017005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2112027
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2112027/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2112027/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2112027/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2112027
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1617989
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1847931
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1677875
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1617989
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2120454
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2120454/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2120454/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2123952
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2123952
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2123952
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2123952/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/1691643
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200699380002
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2125548
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
Notifications>>>>contain numberfalse contain requestfalse
Notifications>>>>send Notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2143875
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2143875/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2143875/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147241
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147241
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147241/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147241/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2075829
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2075829/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661/sign
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661/unsign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2147661/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2147721
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2147721/sign
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2147721/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2148006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2148006/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2148006/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2146845
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2151345
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2151345
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2151345
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2151345
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2151345
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2146845
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2134908
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2146845
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2146845/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2151345
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2151345/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2146845
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2156334
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2156334/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2156334/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2166061
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2166061
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2166061
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2166061
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2166061
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2166061/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2166061/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2134908
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165947
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165743
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165629
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165629
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165947
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201757017005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2169622
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2169622/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2169622/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165743
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165629
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165743
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201070797001
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165743
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165743
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2179042
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2191290
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2195170
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2191311
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2191311
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2195170
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2195170
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2195170
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2195170
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2195170
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2195170
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
ROOT ACTIVITY>>>>set unlocker
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2195170
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2195170
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165947
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165629
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165629
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165743
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165629
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165629
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2165743
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2179042
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202885655004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202885655004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2200996
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202885655004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2200996
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2200996
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2200996
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2200996
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2200996/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2200996/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2089380
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2201005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2201005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202829144002
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2201062
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2201062/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2201062/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201282969005
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2201065
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2201065/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2201065/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2075832
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2075832/unsign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107353
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107353/unsign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2107353
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2075832
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2075832
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2207520
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2207520/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2207520/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2191290
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2191290/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/190560080280000882743001
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2214855
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2214855/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2214855/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2215194
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2215194/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2215194/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2215257
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2215257/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2215257/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2215257
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2215257/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2215257
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2217534
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2217534/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2217534/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2191311
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2191311/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2220369
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2220369/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2220369/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/2214507
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2214855
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2223433
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2223433
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2223442
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2223442/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2223442/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/6362141040213465
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2226834
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2226834/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2226834/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2223442
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2223442/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201617684002/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200935673008
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2262030
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200935673008
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2262030
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200935673008
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/1839749
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2277999
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2277999/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2277999/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2278011
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2278011/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2278011/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
Notifications>>>>contain numbertrue contain requesttrue
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2290921
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2281585
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2290921
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/710570025601000291186001
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2291881
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2291881/sign
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2291881
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2291881/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2281585
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856/sign
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2228856/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2281585
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2281585/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2281585/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0200935673008
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2293419
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2293419/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2293419/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201717428004
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2293437
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2293437/sign
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2293437
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/2293437/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004/requests/2292010
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0100121067004/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2302773
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2302773/sign
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2302773
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2302773
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2302773/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2314180
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2314180
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
SPLASH ACTIVITY>>>>show splash for 2 second
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2314180
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
Notifications>>>>contain numbertrue contain requesttrue
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Notifications>>>>send Notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/favorites
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2314528
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2314528/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/2314528/pay
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/bill
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202883598006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
Application>>>>Application's been run
Application>>>>get or create shared preferences
Application>>>>get or create new password key
Application>>>>get database encrypted password
Application>>>>save encrypted password on share preferences
Application>>>>create component load app module
Application>>>>on create method is done
DATABASE-HELPER>>>>getHelper >> 
DATABASE-HELPER>>>> getHelper >> get old pass
DATABASE-HELPER>>>> getHelper >> create new password
DATABASE-HELPER>>>> getHelper >> create new instance of database helper
DATABASE-HELPER>>>> getHelper >> return data base helper
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
SPLASH ACTIVITY>>>>show splash for 2 second
SPLASH ACTIVITY>>>>create new intent to go to root activity
ROOT ACTIVITY>>>>before set default exception handler
ROOT ACTIVITY>>>>in init progress bar
Application>>>>get google analytics tracker
ROOT ACTIVITY>>>>on initStaticVars
ROOT ACTIVITY>>>>before subscribe topic
ROOT ACTIVITY>>>>run badge service
DATABASE-HELPER>>>> getHelper >> return data base helper
ROOT ACTIVITY>>>>set unlocker
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>paymentRequest != null false
HISTORY-INITIALIZER>>>>started
HISTORY-INITIALIZER>>>>userService != null ? true
USERSERVICE>>>>get user
HISTORY-INITIALIZER>>>>user != null ?:  true
DATABASE-HELPER>>>> getHelper >> return data base helper
DATABASE-HELPER>>>> getHelper >> return data base helper
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
KeyStoreUtil>>>>decrypt String Exception : Attempt to invoke virtual method 'byte[] java.lang.String.getBytes()' on a null object reference
BADGE-UPDATER>>>>on start
BADGE-UPDATER>>>>before update badge
BADGE-UPDATER>>>>get nid can not load service
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0201683195000/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2262030
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2262030/sign
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/2262030/pay
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/0202244340006/requests/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/deposits/min
HTTP CLIENT>>>>execute request : /api/v1/0015703150/balance
HTTP CLIENT>>>>execute request : /api/v1/0015703150/notification
